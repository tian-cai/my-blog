(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{444:function(v,_,e){"use strict";e.r(_);var t=e(25),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h3",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),e("p",[e("code",[v._v("npm")]),v._v(" 是 "),e("code",[v._v("Node")]),v._v(" 的模块管理器，功能极其强大。主要分为三个部分："),e("br")]),v._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[v._v("网站"),e("OutboundLink")],1),e("br"),v._v("\n开发者可以在该网站查找各种各样的包，以供使用。")])]),v._v(" "),e("li",[e("p",[v._v("注册表（registry）"),e("br"),v._v("\n注册表是一个巨大的数据库，保存了每个包（package）的信息。"),e("br"),v._v("\n例如我们要查询 "),e("code",[v._v("react")]),v._v(" 包的信息，可以访问"),e("code",[v._v("https://registry.npmjs.org/react")]),v._v("，就会看到    "),e("code",[v._v("react")]),v._v(" 模块所有版本的信息。"),e("br"),v._v("\n模块名后面，还可以跟上版本号或者标签，用来查询某个具体版本的信息，例如："),e("code",[v._v("https://registry.npmjs.org/react/16.8.1")]),v._v(" 查看 "),e("code",[v._v("react")]),v._v(" 16.8.1版本的信息 "),e("br"),v._v("\n具体用法就是，"),e("code",[v._v("https://registry.npmjs.org/")]),v._v(" 后面跟上模块名，就会得到一个JSON对象，    包含模块所有版本的信息。")])]),v._v(" "),e("li",[e("p",[v._v("命令行工具 (CLI)"),e("br"),v._v("\n开发者可以使用该命令行工具和 "),e("code",[v._v("npm")]),v._v(" 进行交互，包括包的安装，发布等。")])])]),v._v(" "),e("h3",{attrs:{id:"安装机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装机制"}},[v._v("#")]),v._v(" 安装机制")]),v._v(" "),e("p",[e("code",[v._v("node")]),v._v(" 模块的首次安装过程可以简单分为四步：")]),v._v(" "),e("ol",[e("li",[v._v("执行 "),e("code",[v._v("npm install <package>")]),v._v(" 命令")]),v._v(" "),e("li",[e("code",[v._v("npm")]),v._v(" 向 "),e("code",[v._v("registry")]),v._v(" 注册表查询模块压缩包的网址")]),v._v(" "),e("li",[v._v("下载压缩包，存放在缓存目录，默认就是 "),e("code",[v._v("~/.npm")])]),v._v(" "),e("li",[v._v("解压压缩包到当前项目的 "),e("code",[v._v("node_modules")]),v._v(" 目录")])]),v._v(" "),e("p",[e("strong",[v._v("那么什么是压缩包的网址呢？")]),e("br"),v._v("\n我们通过注册表查询模块的信息时，返回的 JSON 对象里面，有一个 "),e("code",[v._v("dist.tarball")]),v._v(" 属性，就是模块该版本压缩包的网址。")]),v._v(" "),e("h3",{attrs:{id:"安装包的几种方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装包的几种方式"}},[v._v("#")]),v._v(" 安装包的几种方式")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("包名安装"),e("br"),v._v(" "),e("code",[v._v("npm i react")]),v._v(" : 默认安装 "),e("code",[v._v("react")]),v._v("模块 "),e("code",[v._v("latest")]),v._v(" 标签上的最新版本")])]),v._v(" "),e("li",[e("p",[v._v("包名加版本"),e("br"),v._v(" "),e("code",[v._v("npm i react@16.8.1")]),v._v(" : 安装 "),e("code",[v._v("react")]),v._v("模块16.8.1的版本")])]),v._v(" "),e("li",[e("p",[v._v("包名加 "),e("code",[v._v("tag")]),e("br"),v._v(" "),e("code",[v._v("npm i react@next")]),v._v(" : 安装 "),e("code",[v._v("react")]),v._v("模块 "),e("code",[v._v("next")]),v._v(" 标签上的最新版本")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("tarball url")]),v._v(" "),e("br"),v._v(" "),e("code",[v._v("npm i https://registry.npmjs.org/react/-/react-16.8.1.tgz")]),v._v(" : 安装 "),e("code",[v._v("react")]),v._v("模块16.8.1的版本")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("tarball file")]),v._v(" "),e("br"),v._v(" "),e("code",[v._v("npm i file: xxxx.xxx.tgz")]),v._v(" tarball file 可以通过 "),e("code",[v._v("npm pack")]),v._v(" 命令得到")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("git url")]),e("br"),v._v(" "),e("code",[v._v("npm i git+https://github.com/facebook/react.git")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("username/project")]),v._v(" "),e("br"),v._v(" "),e("code",[v._v("npm i github:facebook/react")])])])]),v._v(" "),e("h3",{attrs:{id:"版本号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本号"}},[v._v("#")]),v._v(" 版本号")]),v._v(" "),e("p",[e("code",[v._v("npm")]),v._v(" 采用了 "),e("code",[v._v("semver")]),v._v(" 规范作为依赖版本管理方案，版本格式一般为：主版本号.次版本号.修订号。")]),v._v(" "),e("ul",[e("li",[v._v("主版本号（"),e("code",[v._v("major")]),v._v("）：一般改动很大，不兼容低版本。")]),v._v(" "),e("li",[v._v("次版本号（"),e("code",[v._v("minor")]),v._v("）：兼容同一个大版本的API和用法。")]),v._v(" "),e("li",[v._v("修订号（"),e("code",[v._v("patch")]),v._v("）：一般用来修复bug。")]),v._v(" "),e("li",[v._v("有的时候在修订号后面可能还会有先行版本号，例如 "),e("code",[v._v("1.0.0-alpha.1")]),v._v(" ， "),e("code",[v._v("1.0.0-beta.4")]),v._v(" ，  "),e("code",[v._v("2.0.0-rc.1")]),v._v(" 等。常用的先行版本一般为 "),e("code",[v._v("alpha")]),v._v(" ，"),e("code",[v._v("beta")]),v._v(" ，"),e("code",[v._v("rc")]),v._v(" ，"),e("code",[v._v("stable")]),v._v(" ，"),e("code",[v._v("csp")]),v._v(" 等。")])]),v._v(" "),e("h3",{attrs:{id:"发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[v._v("#")]),v._v(" 发布")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("修改版本号")]),e("br"),v._v(" "),e("code",[v._v("npm version major")]),v._v(" : 主版本号加 1，其余版本号归 0。"),e("br"),v._v(" "),e("code",[v._v("npm version minor")]),v._v(" : 次版本号加 1，修订号归 0。"),e("br"),v._v(" "),e("code",[v._v("npm version patch")]),v._v(" : 修订号加 1。"),e("br"),v._v(" "),e("code",[v._v("npm version 版本号")]),v._v(" : 设置版本号为指定的版本号"),e("br"),v._v(" "),e("code",[v._v("npm version prerelease")]),v._v(" : 先行版本号增加1"),e("br"),v._v(" "),e("code",[v._v("npm version prerelease --preid=<prerelease-id>")]),v._v(" : 指定先行版本的名字"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 假定现在的版本号是1.1.1")]),v._v("\nnpm version major  "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 2.0.0")]),v._v("\nnpm version minor  "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 1.2.0")]),v._v("\nnpm version patch  "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 1.1.2")]),v._v("\nnpm version prerelease "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 1.1.2-0")]),v._v("\nnpm version prerelease "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("--")]),v._v("preid"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v("alpha "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 1.1.2-alpha.0")]),v._v("\nnpm version "),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("4.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[v._v(".2")]),v._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 4.1.2")]),v._v("\n")])])]),v._v("执行 "),e("code",[v._v("npm version")]),v._v(" 修改完版本号之后，还会默认执行 "),e("code",[v._v("git add")]),v._v(" -> "),e("code",[v._v("git commit")]),v._v(" -> "),e("code",[v._v("git tag")]),v._v(" 操作，"),e("code",[v._v("commit")]),v._v(" 的信息和为 "),e("code",[v._v("tag")]),v._v(" 均为版本号。")]),v._v(" "),e("li",[e("strong",[v._v("修改 "),e("code",[v._v("commit")]),v._v(" 信息")]),e("br"),v._v("\n假如我们需要修改提交信息的话，只需在 "),e("code",[v._v("npm version")]),v._v(" 命令后加上 "),e("code",[v._v("-m")]),v._v(" 选项即可，"),e("code",[v._v("%s")]),v._v(" 会被替换成为版本号。"),e("code",[v._v('npm version prerelease -m "update %s"')])]),v._v(" "),e("li",[e("strong",[v._v("禁用版本提交和标记tag")]),e("br"),v._v(" "),e("code",[v._v("npm version prerelease --no-git-tag-version")])]),v._v(" "),e("li",[e("strong",[v._v("发布")]),e("br"),v._v(" "),e("code",[v._v("npm publish")]),v._v(" : 发布npm包")])]),v._v(" "),e("h3",{attrs:{id:"tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[v._v("#")]),v._v(" tag")]),v._v(" "),e("p",[e("code",[v._v("npm")]),v._v(" 中的 "),e("code",[v._v("tag")]),v._v(" 类似于 "),e("code",[v._v("git")]),v._v(" 中的 "),e("code",[v._v("branch")]),v._v(" ，发布者可以在指定的 "),e("code",[v._v("tag")]),v._v(" 上进行发版，使用者可以选择指定 "),e("code",[v._v("tag")]),v._v(" 来安装，默认的"),e("code",[v._v("tag")]),v._v("是 "),e("code",[v._v("latest")]),v._v("。这对于我们日常开发非常有用，很多时候我们想要发布版本来进行验证功能，但是又不想影响正在使用的人，我们就可以利用tag和先行版本来进行发包。"),e("br")]),v._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[v._v("npm publish "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("--")]),v._v("tag alpha  "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 发版到名为alpha的tag上")]),v._v("\nnpm i "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("package")]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v("@"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),v._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 从指定tag上安装包")]),v._v("\n")])])]),e("h3",{attrs:{id:"link"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link"}},[v._v("#")]),v._v(" link")]),v._v(" "),e("p",[v._v("我们在日常的开发中经常会有这样的情况：有两个项目分别为A和B，A项目我们封装了一些基本的逻辑，供其他项目进行使用；B项目为我们的业务项目，依赖了A项目。然后现在来了一个新的需求，需要对AB两个项目进行改动，此时我们写完了A项目，想要在B项目中进行验证A项目的逻辑是否正确。"),e("br"),v._v("\n当然我们可以通过A项目发版，然后B项目进行版本升级来进行验证，但是这导致的问题就是可能需要频繁发版；另外一种解决方案就是 "),e("code",[v._v("link")]),v._v("。"),e("br")]),v._v(" "),e("p",[v._v("具体做法如下：")]),v._v(" "),e("ol",[e("li",[v._v("在A项目中执行 "),e("code",[v._v("npm link")]),v._v(" 命令。")]),v._v(" "),e("li",[v._v("在B项目中执行 "),e("code",[v._v("npm link A的包名")]),v._v(" 命令。")])]),v._v(" "),e("p",[v._v("执行完上述两步之后，此时B项目中 "),e("code",[v._v("node_modules")]),v._v(" 里A的依赖就会指向我们的A项目。这样就可以不用发版进行验证，非常方便。当然 "),e("code",[v._v("link")]),v._v(" 的本质原理其实就是软连接。")]),v._v(" "),e("h3",{attrs:{id:"npx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[v._v("#")]),v._v(" "),e("code",[v._v("npx")])]),v._v(" "),e("p",[e("code",[v._v("npx")]),v._v(" 执行 Node 软件包的工具。原理很简单，就是运行的时候，会到 "),e("code",[v._v("node_modules/.bin")]),v._v(" 路径和环境变量 "),e("code",[v._v("$PATH")]),v._v(" 里面，检查命令是否存在；如果存在，则执行；不存在，则进行临时安装，然后执行，执行完毕将包删除。")]),v._v(" "),e("h3",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[v._v("#")]),v._v(" 配置")]),v._v(" "),e("p",[e("code",[v._v("npm config")]),v._v(" 命令用来管理 npm 的配置")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("npm config set <key> <value>")]),v._v(" : 设置一些配置")]),v._v(" "),e("li",[e("code",[v._v("npm config get <key>")]),v._v(" : 获取指定的配置")]),v._v(" "),e("li",[e("code",[v._v("npm config delete <key>")]),v._v(" : 删除指定的配置")]),v._v(" "),e("li",[e("code",[v._v("npm config list")]),v._v(" : 配置列表")]),v._v(" "),e("li",[e("code",[v._v("npm config edit")]),v._v(" : 用编辑器打开配置文件"),e("br")])]),v._v(" "),e("p",[v._v("例如我们经常会对 "),e("code",[v._v("npm")]),v._v(" 的 "),e("code",[v._v("registry")]),v._v(" 进行设置"),e("br"),v._v(" "),e("code",[v._v("npm config set registry https://registry.npm.taobao.org/")])]),v._v(" "),e("h3",{attrs:{id:"npm-ci"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-ci"}},[v._v("#")]),v._v(" "),e("code",[v._v("npm ci")])]),v._v(" "),e("ul",[e("li",[v._v("该命令只能一次安装整个项目，不能添加单独的依赖项")]),v._v(" "),e("li",[v._v("项目必须有 "),e("code",[v._v("package-lock.json")]),v._v(" 文件")]),v._v(" "),e("li",[v._v("每次开始安装之前，都会清除 "),e("code",[v._v("node_modules")])]),v._v(" "),e("li",[v._v("不会改写 "),e("code",[v._v("package.json")]),v._v(" 和 "),e("code",[v._v("package-lock.json")]),v._v(" 文件")]),v._v(" "),e("li",[v._v("安装速度更快，更严格")])]),v._v(" "),e("p",[v._v("很多时候，我们新克隆一个项目，进行 "),e("code",[v._v("npm i")]),v._v(" 安装的时候，经常会出现改动 "),e("code",[v._v("package.json")]),v._v(" 和 "),e("code",[v._v("package-lock.json")]),v._v(" 文件的情况，这有的时候会带来一些风险，而此时使用 "),e("code",[v._v("npm ci")]),v._v(" 就是一个好的选择。")]),v._v(" "),e("h3",{attrs:{id:"查询包信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询包信息"}},[v._v("#")]),v._v(" 查询包信息")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("npm view 包名")]),v._v(" : 显示包的详细信息")]),v._v(" "),e("li",[e("code",[v._v("npm view 包名 versions")]),v._v(" : 显示包的所有历史版本")]),v._v(" "),e("li",[e("code",[v._v("npm repo 包名")]),v._v(" : 打开包的源码仓库页面")]),v._v(" "),e("li",[e("code",[v._v("npm docs 包名")]),v._v(" : 打开包的文档地址")])]),v._v(" "),e("h3",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[v._v("#")]),v._v(" 其他")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("npm login")]),v._v(" : 登陆 npm")]),v._v(" "),e("li",[e("code",[v._v("npm whoami")]),v._v(" : 显示 npm 用户名")]),v._v(" "),e("li",[e("code",[v._v("npm bin")]),v._v(" : 显示 npm 的 bin 文件夹的路径")]),v._v(" "),e("li",[e("code",[v._v("npm root")]),v._v(" : 显示 npm 根目录")])]),v._v(" "),e("h3",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[v._v("#")]),v._v(" 参考文章")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.npmjs.cn/",target:"_blank",rel:"noopener noreferrer"}},[v._v("npm 中文文档"),e("OutboundLink")],1)]),v._v(" "),e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/02/npx.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("npx 使用教程"),e("OutboundLink")],1)]),v._v(" "),e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/npm-install.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("npm 模块安装机制简介"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=r.exports}}]);