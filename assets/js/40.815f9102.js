(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{414:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"关于set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于set"}},[t._v("#")]),t._v(" 关于Set")]),t._v(" "),a("p",[t._v("ES6 提供了新的数据结构 "),a("code",[t._v("Set")]),t._v("。它类似于数组，但是成员的值都是唯一的，没有重复的值。")]),t._v(" "),a("ul",[a("li",[t._v("构造函数"),a("br"),t._v(" "),a("code",[t._v("Set")]),t._v(" 本身是一个构造函数，用来生成 "),a("code",[t._v("Set")]),t._v(" 数据结构。\n"),a("code",[t._v("Set")]),t._v(" 函数可以接受一个数组（或者具有 "),a("code",[t._v("iterable")]),t._v(" 接口的其他数据结构）作为参数，用来初始化。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" set "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  [ 1, 2, 3, 4, 5, '5', NaN ]")]),t._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1, 2, 3, 4, 5, '5', NaN, 9")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[1,1] [2,2]...[NaN,NaN] [9,9]  键名=键值  item为数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("方法与属性\n"),a("ul",[a("li",[a("code",[t._v("add(value)")]),t._v("：添加某个值，返回 "),a("code",[t._v("Set")]),t._v(" 结构本身。")]),t._v(" "),a("li",[a("code",[t._v("delete(value)")]),t._v("：删除某个值，返回一个布尔值，表示删除是否成功。")]),t._v(" "),a("li",[a("code",[t._v("has(value)")]),t._v("：返回一个布尔值，表示该值是否为Set的成员。")]),t._v(" "),a("li",[a("code",[t._v("clear()")]),t._v("：清除所有成员，没有返回值。")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v("：返回Set实例的成员总数。")]),t._v(" "),a("li",[a("code",[t._v("constructor")]),t._v("：构造函数，默认就是Set函数。")]),t._v(" "),a("li",[a("code",[t._v("keys()")]),t._v("：返回键名的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("values()")]),t._v("：返回键值的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("entries()")]),t._v("：返回键值对的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("forEach()")]),t._v("：使用回调函数遍历每个成员。参数与数组一致。")])])]),t._v(" "),a("li",[t._v("注意点"),a("br"),t._v(" "),a("code",[t._v("Set")]),t._v(" 内部判断两个值是否不同，类似于严格相等运算符（"),a("code",[t._v("===")]),t._v("），主要的区别是 "),a("code",[t._v("NaN")]),t._v(" 等于自身。"),a("br"),t._v("\n由于 "),a("code",[t._v("Set")]),t._v(" 结构没有键名，只有键值，所以 "),a("code",[t._v("keys")]),t._v(" 方法和 "),a("code",[t._v("values")]),t._v("方法的行为完全一致。")])]),t._v(" "),a("h3",{attrs:{id:"关于weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于weakset"}},[t._v("#")]),t._v(" 关于"),a("code",[t._v("WeakSet")])]),t._v(" "),a("p",[a("code",[t._v("WeakSet")]),t._v(" 结构与 "),a("code",[t._v("Set")]),t._v(" 类似，也是不重复的值的集合。但是，它与 "),a("code",[t._v("Set")]),t._v(" 有两个区别。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("WeakSet")]),t._v(" 的成员只能是对象，而不能是其他类型的值。")]),t._v(" "),a("li",[a("code",[t._v("WeakSet")]),t._v(" 中的对象都是弱引用，即垃圾回收机制不考虑 "),a("code",[t._v("WeakSet")]),t._v(" 对该对象的引用。")])]),t._v(" "),a("ul",[a("li",[t._v("构造函数"),a("br"),t._v("\n作为构造函数，"),a("code",[t._v("WeakSet")]),t._v(" 可以接受一个数组或类似数组的对象作为参数。")]),t._v(" "),a("li",[t._v("方法"),a("br"),t._v(" "),a("code",[t._v("add(value)")]),t._v("：向 "),a("code",[t._v("WeakSet")]),t._v(" 实例添加一个新成员。"),a("br"),t._v(" "),a("code",[t._v("delete(value)")]),t._v("：清除 "),a("code",[t._v("WeakSet")]),t._v(" 实例的指定成员。"),a("br"),t._v(" "),a("code",[t._v("has(value)")]),t._v("：返回一个布尔值，表示某个值是否在")]),t._v(" "),a("li",[t._v("注意点"),a("br"),t._v(" "),a("code",[t._v("WeakSet")]),t._v(" 不能遍历，"),a("code",[t._v("WeakSet")]),t._v(" 的一个用处，是储存 "),a("code",[t._v("DOM")]),t._v(" 节点，而不用担心这些节点从文档移除时，会引发内存泄漏。")])]),t._v(" "),a("h3",{attrs:{id:"关于map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于map"}},[t._v("#")]),t._v(" 关于Map")]),t._v(" "),a("p",[t._v("ES6 提供了 "),a("code",[t._v("Map")]),t._v(" 数据结构。它类似于对象，也是键值对的集合，\n但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。\n也就是说，"),a("code",[t._v("Object")]),t._v(" 结构提供了“字符串—值”的对应，"),a("code",[t._v("Map")]),t._v(" 结构提供了“值—值”的对应。")]),t._v(" "),a("ul",[a("li",[t._v("构造函数"),a("br"),t._v("\n任何具有 "),a("code",[t._v("Iterator")]),t._v(" 接口、且每个成员都是一个双元素的数组的数据结构都可以当作 "),a("code",[t._v("Map")]),t._v(" 构造函数的参数。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Map { 1 => 1, '1' => '1', NaN => 1234 }")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Map { '1' => '1', NaN => 1234 }")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1  NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 1234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 1 NaN 1234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("方法与属性\n"),a("ul",[a("li",[a("code",[t._v("set(key, value)")]),t._v(" 设置键名 "),a("code",[t._v("key")]),t._v(" 对应的键值为 "),a("code",[t._v("value")]),t._v("，然后返回整个 "),a("code",[t._v("Map")]),t._v(" 结构。")]),t._v(" "),a("li",[a("code",[t._v("get(key)")]),t._v(" 读取 "),a("code",[t._v("key")]),t._v(" 对应的键值，如果找不到 "),a("code",[t._v("key")]),t._v("，返回 "),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("has(key)")]),t._v(" 返回一个布尔值，表示某个键是否在当前 Map 对象之中。")]),t._v(" "),a("li",[a("code",[t._v("delete(key)")]),t._v(" 删除某个键，返回 "),a("code",[t._v("true")]),t._v("。如果删除失败，返回 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("clear()")]),t._v(" 清除所有成员，没有返回值。")]),t._v(" "),a("li",[a("code",[t._v("size")]),t._v(" 返回 "),a("code",[t._v("Map")]),t._v(" 结构的成员总数。")]),t._v(" "),a("li",[a("code",[t._v("keys()")]),t._v("：返回键名的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("values()")]),t._v("：返回键值的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("entries()")]),t._v("：返回键值对的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("forEach()")]),t._v("：遍历 "),a("code",[t._v("Map")]),t._v(" 的所有成员。参数与数组一致。")])])]),t._v(" "),a("li",[t._v("注意点"),a("br"),t._v(" "),a("code",[t._v("Map")]),t._v(" 内部判断两个键值是否不同，与键值的类型有关。"),a("br"),t._v("\n如果 "),a("code",[t._v("Map")]),t._v(" 的键是一个简单类型的值，类似于严格相等运算符（"),a("code",[t._v("===")]),t._v("），主要的区别是 "),a("code",[t._v("NaN")]),t._v(" 等于自身。"),a("br"),t._v("\n如果 "),a("code",[t._v("Map")]),t._v(" 的键是一个复合类型的值，则与内存地址有关，只要内存地址不一样，就视为两个键。")])]),t._v(" "),a("h3",{attrs:{id:"关于weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于weakmap"}},[t._v("#")]),t._v(" 关于WeakMap")]),t._v(" "),a("p",[a("code",[t._v("WeakMap")]),t._v(" 结构与 "),a("code",[t._v("Map")]),t._v(" 结构类似，也是用于生成键值对的集合。与 "),a("code",[t._v("Map")]),t._v(" 的区别有两点。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("WeakMap")]),t._v(" 只接受对象作为键名。")]),t._v(" "),a("li",[a("code",[t._v("WeakMap")]),t._v(" 的键名所指向的对象，不计入垃圾回收机制。")])]),t._v(" "),a("ul",[a("li",[t._v("方法"),a("br"),t._v(" "),a("code",[t._v("get()")]),t._v("、"),a("code",[t._v("set()")]),t._v("、"),a("code",[t._v("has()")]),t._v("、"),a("code",[t._v("delete()")])]),t._v(" "),a("li",[t._v("注意点"),a("br"),t._v("\n不能遍历，"),a("code",[t._v("WeakMap")]),t._v(" 应用的典型场合就是 "),a("code",[t._v("DOM")]),t._v(" 节点作为键名。防止内存泄漏。")])]),t._v(" "),a("h3",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/set-map",target:"_blank",rel:"noopener noreferrer"}},[t._v("Set 和 Map 数据结构"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);