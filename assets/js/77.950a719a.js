(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{455:function(a,t,e){"use strict";e.r(t);var r=e(25),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[a._v("#")]),a._v(" 是什么")]),a._v(" "),e("p",[a._v("webpack 是一个现代 JavaScript 应用程序的静态模块打包器。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。")]),a._v(" "),e("h3",{attrs:{id:"入口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#入口"}},[a._v("#")]),a._v(" 入口")]),a._v(" "),e("p",[a._v("入口起点指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。")]),a._v(" "),e("h3",{attrs:{id:"出口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#出口"}},[a._v("#")]),a._v(" 出口")]),a._v(" "),e("p",[a._v("告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件，默认值为 ./dist。")]),a._v(" "),e("h3",{attrs:{id:"loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[a._v("#")]),a._v(" loader")]),a._v(" "),e("p",[a._v("loader 让 webpack 能够去处理那些非 JavaScript 文件。\nloader 可以将所有类型的文件转换为 webpack 能够处理的有效模块，然后你就可以利用 webpack 的打包能力，对它们进行处理。")]),a._v(" "),e("h3",{attrs:{id:"插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[a._v("#")]),a._v(" 插件")]),a._v(" "),e("p",[a._v("插件可以用于执行范围更广的任务。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。")]),a._v(" "),e("h3",{attrs:{id:"模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[a._v("#")]),a._v(" 模式")]),a._v(" "),e("p",[a._v("通过选择 development 或 production 之中的一个，来设置 mode 参数，你可以启用相应模式下的 webpack 内置的优化。")])])}),[],!1,null,null,null);t.default=s.exports}}]);