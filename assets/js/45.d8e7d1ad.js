(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{419:function(t,e,r){"use strict";r.r(e);var a=r(25),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("blockquote",[r("p",[t._v("V8引擎垃圾回收")])]),t._v(" "),r("h3",{attrs:{id:"什么是垃圾回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是垃圾回收"}},[t._v("#")]),t._v(" 什么是垃圾回收")]),t._v(" "),r("p",[t._v("垃圾回收（Garbage Collection， 简称GC），简单一点来说就是将不再需要使用的变量所占用的内存释放掉的过程就叫做垃圾回收！")]),t._v(" "),r("h3",{attrs:{id:"v8是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8是什么"}},[t._v("#")]),t._v(" V8是什么")]),t._v(" "),r("p",[t._v("V8 是由谷歌收购并使用C++开发并开源的javascript虚拟机引擎，运用于Chrome浏览器，还有我们熟知的node。\n它将内存分为"),r("strong",[t._v("新生代")]),t._v("(new space)与"),r("strong",[t._v("老生代")]),t._v("(old space)两个区域")]),t._v(" "),r("h3",{attrs:{id:"新生代-new-space"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新生代-new-space"}},[t._v("#")]),t._v(" 新生代(new space)")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("特点")]),t._v(" "),r("ol",[r("li",[t._v("新生代(32 位系统分配 16M 的内存空间，64 位系统分配 32M 的内存空间)")]),t._v(" "),r("li",[t._v("新生代存的都是生存周期短的对象，当存储空间快要满时，就进行一次垃圾回收")])])]),t._v(" "),r("li",[r("p",[t._v("回收算法"),r("br"),t._v("\n采用Scavenge垃圾回收算法，将内存一分为二，一块处于使用状态(from space)，一块处于闲置状态(to space)"),r("br"),t._v("\n具体过程如下：")]),t._v(" "),r("ol",[r("li",[t._v("检测到存储空间快要满时，开始进行垃圾回收")]),t._v(" "),r("li",[t._v("对from space开始检查，对于存活对象直接复制到to space")]),t._v(" "),r("li",[t._v("清空from space中的数据，同时将from space置为空闲状态，即变成to space，对应的to space变成from space，这个过程称为翻转")]),t._v(" "),r("li",[t._v("重复第一步到第三步")])])])]),t._v(" "),r("h3",{attrs:{id:"新生代晋升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新生代晋升"}},[t._v("#")]),t._v(" 新生代晋升")]),t._v(" "),r("p",[r("strong",[t._v("对象从新生代移动到老生代的过程叫作晋升")]),r("br"),t._v("\n对象晋升的条件主要有两个：")]),t._v(" "),r("ul",[r("li",[t._v("如果一个对象是第二次经历从from空间复制到to空间，那么这个对象会被移动到老生代中")]),t._v(" "),r("li",[t._v("当要从from空间复制一个对象到to空间时，如果to空间已经使用了超过25%，则这个对象直接晋升到老生代中")])]),t._v(" "),r("h3",{attrs:{id:"老生代-old-space"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#老生代-old-space"}},[t._v("#")]),t._v(" 老生代(old space)")]),t._v(" "),r("ul",[r("li",[t._v("特点\n"),r("ol",[r("li",[t._v("老生代( 32 位操作系统分配大约 700M 内存空间，64 位操作系统分配大约 1.4G 内存空间)")]),t._v(" "),r("li",[t._v("老生代中的对象为存活时间较长或常驻内存的对象")])])]),t._v(" "),r("li",[t._v("回收算法\n"),r("ul",[r("li",[t._v("标记清除(Mark-Sweep)\n"),r("ol",[r("li",[t._v("标记阶段：对于存活对象进行标记")]),t._v(" "),r("li",[t._v("清除阶段：清除没有被标记的对象\n"),r("br"),t._v("存在的问题就是在进行一次清除回收以后，内存空间会出现不连续的状态。这种内存碎片会对后续的内存分配造成问题。")])])]),t._v(" "),r("li",[t._v("标记整理(Mark-Compact)\n"),r("ol",[r("li",[t._v("标记阶段：对于存活对象进行标记")]),t._v(" "),r("li",[t._v("整理阶段：将所有存活对象向内存空间的一侧移动")]),t._v(" "),r("li",[t._v("清除阶段：将边界另一侧的内存一次性全部回收")])])])])]),t._v(" "),r("li",[t._v("策略"),r("br"),t._v("\nV8主要使用Mark-Sweep，在空间不足以对从新生代中晋升过来的对象进行分配时，才使用Mark-Compact")])]),t._v(" "),r("h3",{attrs:{id:"参考文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6909239354418266119",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8 引擎垃圾回收与内存分配"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903591510016007",target:"_blank",rel:"noopener noreferrer"}},[t._v("聊聊V8引擎的垃圾回收"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844904146328535053#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8引擎垃圾回收"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.cnblogs.com/tangshiwei/p/12026915.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文搞懂V8引擎的垃圾回收"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.cn/post/6844903993420840967",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8 引擎垃圾内存回收原理解析"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=_.exports}}]);